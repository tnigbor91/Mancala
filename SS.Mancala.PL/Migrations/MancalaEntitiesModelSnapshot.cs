// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SS.Mancala.PL.Data;

#nullable disable

namespace SS.Mancala.PL.Migrations
{
    [DbContext(typeof(MancalaEntities))]
    partial class MancalaEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentTurn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsGameOver")
                        .HasColumnType("bit");

                    b.Property<Guid>("Player1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Player2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGames", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            CurrentTurn = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            DateCreated = new DateTime(2024, 12, 2, 11, 38, 15, 8, DateTimeKind.Local).AddTicks(1413),
                            IsGameOver = false,
                            Player1Id = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Player2Id = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblMove", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExtraTurn")
                        .HasColumnType("bit");

                    b.Property<int>("MoveNo")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SourcePit")
                        .HasColumnType("int");

                    b.Property<int>("StonesMoved")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_tblMove_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblMoves", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bcf8e7db-9cc5-46ed-ae32-2fcd1facb176"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsExtraTurn = false,
                            MoveNo = 1,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            SourcePit = 2,
                            StonesMoved = 3,
                            TimeStamp = new DateTime(2024, 12, 2, 11, 38, 15, 8, DateTimeKind.Local).AddTicks(5666)
                        });
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblPit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsMancala")
                        .HasColumnType("bit");

                    b.Property<int>("PitPosition")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Stones")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblPit_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblPits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c71c7660-69af-4dda-bd22-73f6f259b910"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 1,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("63a83d7c-4252-408e-9fde-56d7aa781616"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 2,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("12507b6d-9dd8-4e0f-b979-4f284bcc6f27"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 3,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("149556a3-ec35-4bba-810c-8f0d4a8cd435"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 4,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("7fc6d333-9bc0-4f8d-8255-9189a7dbef26"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 5,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("d5d8c483-f97e-459d-8ec5-dd3f7001057b"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 6,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("9ab60cad-fe1e-4fb7-82b4-5ed083645f34"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = true,
                            PitPosition = 7,
                            PlayerId = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Stones = 0
                        },
                        new
                        {
                            Id = new Guid("0d443cfb-4310-449e-b927-1d4da3cbac8d"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 8,
                            PlayerId = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("95301b8d-f924-4c67-97de-0a92984f8b5b"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 9,
                            PlayerId = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("c0ff3d22-75f9-416f-83f1-9d3cd62fae6e"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 10,
                            PlayerId = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("a1deafad-abf9-4faf-90ac-d4f70c91399c"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 11,
                            PlayerId = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("4d766438-6083-4424-bfc2-11e87c88a43a"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 12,
                            PlayerId = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("7c921e1e-1d96-4f8d-a066-2c042cd9a4c3"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = false,
                            PitPosition = 13,
                            PlayerId = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Stones = 4
                        },
                        new
                        {
                            Id = new Guid("41772f81-8e04-4427-8d4b-0e9ceecdfe0a"),
                            GameId = new Guid("da550b0e-e193-48fd-951c-7b301571addc"),
                            IsMancala = true,
                            PitPosition = 14,
                            PlayerId = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Stones = 0
                        });
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblPlayer_Id");

                    b.ToTable("tblPlayers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("19b965ef-7f46-49b7-bd57-e031ea6670c3"),
                            Score = 0,
                            Username = "Taylor"
                        },
                        new
                        {
                            Id = new Guid("87e41b9b-7fdc-4064-a0eb-685b2dab1211"),
                            Score = 0,
                            Username = "Brittany"
                        });
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3b04087-ef02-410a-9cfa-302edb72b419"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserId = "smarin"
                        },
                        new
                        {
                            Id = new Guid("86469d5d-af11-46fc-9ec9-f493abebfc71"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserId = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("5b16c6d1-d68a-4962-9055-de8953ec2a74"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserId = "bfoote"
                        },
                        new
                        {
                            Id = new Guid("c9444061-81af-452b-aa66-b0aa16d5eb1f"),
                            FirstName = "Other",
                            LastName = "Other",
                            Password = "X1BEO/529yeajg8vCpiXXNv/OOk=",
                            UserId = "sophie"
                        });
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblMove", b =>
                {
                    b.HasOne("SS.Mancala.PL.Entities.tblGame", "Game")
                        .WithMany("Moves")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblMove_GameId");

                    b.HasOne("SS.Mancala.PL.Entities.tblPlayer", "Player")
                        .WithMany("Moves")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblMove_PlayerId");

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblPit", b =>
                {
                    b.HasOne("SS.Mancala.PL.Entities.tblGame", "Game")
                        .WithMany("Pits")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblGame_PitId");

                    b.HasOne("SS.Mancala.PL.Entities.tblPlayer", "Player")
                        .WithMany("Pits")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblPlayer_PitId");

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblGame", b =>
                {
                    b.Navigation("Moves");

                    b.Navigation("Pits");
                });

            modelBuilder.Entity("SS.Mancala.PL.Entities.tblPlayer", b =>
                {
                    b.Navigation("Moves");

                    b.Navigation("Pits");
                });
#pragma warning restore 612, 618
        }
    }
}
